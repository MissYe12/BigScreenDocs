
常用的事件
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

事件句柄

================ =====================================
属性               此事件发生在何时...
onabort            图像的加载被中断
onblur             元素失去焦点
onchange           域的内容被改变
onclick            当用户点击某个对象时
ondblclick         当用户双击某个对象时
onerror            在加载文档或图像时发生错误
onfocus            元素获得焦点
================ =====================================

鼠标/键盘属性  

================ =======================================================
属性                  描述
altKey              返回当事件被触发时，"ALT" 是否被按下。
button              返回当事件被触发时，哪个鼠标按钮被点击。
clientX             返回当事件被触发时，鼠标指针的水平坐标。
clientY             返回当事件被触发时，鼠标指针的垂直坐标。
ctrlKey             返回当事件被触发时，"CTRL" 键是否被按下。
metaKey             返回当事件被触发时，"meta" 键是否被按下。
relatedTarget       返回与事件的目标节点相关的节点。
screenX             返回当某个事件被触发时，鼠标指针的水平坐标。
screenY             返回当某个事件被触发时，鼠标指针的垂直坐标。
shiftKey            返回当事件被触发时，"SHIFT" 键是否被按下。
================ =======================================================

标准 Event 属性

================ ===============================================================
属性                        描述
bubbles                 返回布尔值，指示事件是否是起泡事件类型。
cancelable              返回布尔值，指示事件是否可拥可取消的默认动作。
currentTarget       	返回其事件监听器触发该事件的元素。
eventPhase              返回事件传播的当前阶段。
target                  返回触发此事件的元素（事件的目标节点）。
timeStamp               返回事件生成的日期和时间。
type                    返回当前 Event 对象表示的事件的名称。
================ ===============================================================


示例1：鼠标拖拽div

.. code-block:: html
    :linenos:

    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Document</title>
        <style>
            #myDiv1{
                width: 100px;
                height: 100px;
                background-color: #bfa;
                position: absolute;
            }
        </style>
    </head>
    <body>
        <div id="myDiv1"></div>
        <div id="myDiv2"></div>
        <script>
            var myDiv1 = document.getElementById('myDiv1');

            //鼠标在拖拽元素上按下
            myDiv1.onmousedown = function() {
            
                //拖拽元素随鼠标移动
                document.onmousemove = function(event) {
                    event = event || window.event;

                    //获取鼠标的坐标
                    var level = event.clientX;
                    var vertical = event.clientY;

                    //修改myDiv1的位置
                    myDiv1.style.left = level + 'px';
                    myDiv1.style.top = vertical + 'px'; 
                };

                //鼠标松开，元素固定在当前位置
                myDiv1.onmouseup = function() {
                    document.onmousemove = null;

                    //取消onmouseup事件   
                    myDiv1.onmouseup = null;
                };

            };

        </script>
    </body>
    </html>

示例2：键盘移动div

.. code-block:: html
    :linenos:

    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Document</title>
        <style>
            #myDiv{
                width: 100px;
                height: 100px;
                background-color: #bfa;
                position: absolute;
            }
    
        </style>
    </head>
    <body>
        <div id="myDiv"></div>
        <script>
            var myDiv = document.getElementById('myDiv');
            document.onkeydown = function(event) {
                event = event || window.event;
                switch (event.keyCode) {
                    case 37:

                        //左移
                        myDiv.style.left = myDiv.offsetLeft - 30 + 'px';
                        break;
                    case 39:

                        //右移
                        myDiv.style.left = myDiv.offsetLeft + 30 + 'px';
                        break;
                    case 38:

                        //上移
                        myDiv.style.top = myDiv.offsetTop - 30 + 'px';
                        break;
                    case 40:

                        //下移
                        myDiv.style.top = myDiv.offsetTop + 30 + 'px';
                        break;
    
                };
            };
    
        </script>
    </body>
    </html>