文档流
=====================================================================

网页是多层结构，文档流是在最底层，默认创建的元素都在文档流中

流的定义
~~~~~~~~~~~~

“流”是CSS中的一种基本的定位和布局机制。

CSS构建的基石是HTML，而HTML最具代表的两个基石<div>和<span>正好是CSS中块级元素和内联级元素的代表。

所以，所谓“流”，就是CSS中引导元素排列和定位的一条看不见的“水流”。

文档流的定义
~~~~~~~~~~~~~~~~~~

文档流指的是元素排版布局过程中，元素会默认自动从左往右，从上往下的流式排列方式，并最终窗体自上而下分成一行行，并在每行中从左至右的顺序排放元素。

标准流的微观现象
~~~~~~~~~~~~~~~~~

1、空白折叠现象

2、高矮不齐，底边对齐。

3、自动换行。

标准文档流等级
~~~~~~~~~~~~~~~~

块级元素
++++++++

1、霸占一行，不能与其他任何元素并列

2、能接受宽、高

3、如果不设置宽度，那么宽度将默认变为父亲的100%，即和父亲一样宽

行内元素
++++++++++

1、与其他元素并排

2、不能设置宽、高。默认的宽度就是文字的宽度

在HTML中，标签分为：文本级和容器级；

文本级：p、span、a、b、i、u、em

容器级：div、h系列、li、dt、dd

所有的文本级标签都是行内元素，除了p；

p是个文本级，但是是个块级元素；

所有的容器级标签都是块级元素

块元素与行内元素的转化
++++++++++++++++++++++++++++

行内元素与块元素可以相互转换，通过修改display属性值来切换块元素和行内元素，行内元素display：inline，块元素display：block。

举个例子：

.. code-block:: html
    :linenos:


    <div style="display: inline;color: red;">
        哈哈
        <p>哒哒</p>
    </div>

这样就把块元素转化为行内元素。

转化意义： 可以设置原本不能使用的属性。例如行内元素不能设置宽度，转化为块级元素后就能设置宽度，可以更加个性化，合理化地进行调整。

流体布局
~~~~~~~~~~~

流体布局指： 利用元素的“流”的特性来实现各类布局效果。

因为“流”本身具有自适应性，所以以此为根据构建的流体布局也具有一定的自适应性。

但是流体布局不等同于自适应布局（泛指一切具有自适应特性的布局方式）。流体布局属于自适应布局定义中的一个小部分。

流体布局通常指为： div+CSS布局。

拓： 脱离文本流的定位方式（不遵循默认的位置排列）： float和position：absolute（详见第六章第3节的定位）






