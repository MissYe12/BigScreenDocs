
长度单位与颜色
===================================

长度单位（像素px、em、rem、百分比%）
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

px
++++++++++

物理像素： 屏幕是由一个一个发光的小点构成的，每个小点都是一个像素。

CSS像素指CSS样式代码中使用的逻辑像素。CSS像素单位是px。

em 
+++++++

em可用来创建弹性布局（具有适应性）。若要进行弹性设计则所有单位均为em。简言之，em是相对的单位。

注意： 以 em 为单位的元素字体大小可能会受到其任何父元素的字体大小影响。

**相对的意思** 

相对的计算必然会一个参考物，那么这里相对所指的是相对于元素父元素的font-size。
比如说，如果在一个<div>设置字体大小为“16px（浏览器默认的字体大小为16px）”，此时这个<div>的后代元素将继承他的字体大小，除非重新在其后代元素中进行过显示的设置。
此时，如果你将其子元素的字体大小设置为“0.75em”，那么其字体大小计算出来后就相当于“0.75 X 16px = 12px”；
意义： 避免用户调整浏览器字体时导致页面布局崩溃。

rem
+++++++

rem指相对于根元素的字体大小。通过它既可以做到只修改根元素就成比例地调整所有字体大小，又可以避免字体大小逐层复合的连锁反应。

%（相对于父元素）
++++++++++++++++++++

百分比是一个相对长度单位，相对于包含块的高宽或字体大小。

以该单位设定的界面可以随着浏览器页面的大小变化而对其中元素的大小变化作出相应的调整。

vw和vh，vmin和vmax（相对于根元素，即window.innerWidth和window.innerHeight）
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

准确来讲，这四个单位是视口单位。

先介绍几个概念： 

1、视口

在桌面端，视口指的是在桌面端，指的是浏览器的可视区域；

而在移动端，它涉及3个视口：Layout Viewport（布局视口），Visual Viewport（视觉视口），Ideal Viewport（理想视口）。

视口单位中的“视口”，桌面端指的是浏览器的可视区域；移动端指的就是Viewport中的Layout Viewport。

2、视区

浏览器内部的可视区域大小，即window.innerWidth/window.innerHeight大小，不包含任务栏标题栏以及底部工具栏的浏览器区域大小

**vh**

1vh等于视口高度的1%。

**vw**

1vw等于视口宽度的1%。

**vmin**

选取vh和vw中最小的一个。

**vmax**

选取vh和vw中最大的一个。

颜色的表示（颜色名、RGB、HEX、HSL）
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

RGB 
++++++

RGB色彩就是常说的光学三原色，R代表Red（红色），G代表Green（绿色），B代表Blue（蓝色）。
自然界中肉眼所能看到的任何色彩都可以由这三种色彩混合叠加而成，因此也称为加色模式。

RGB色彩在网页设计时的标记方式是RGB（0~255，0~255，0~255），其中括号内以逗号分隔的三组数值恰好就是（R，G，B）的色彩数值，所以数值会是0~255共256个数值的这个区间。
0是最暗的，255是最亮的。

HSL
++++++

HSL色彩的写法是HSL（色相角度但不加单位0~360，色彩饱和度0~100%，色彩亮度0~100%），而在括号内的色相采用的是0~360度

举个例子： HSL(240,100%,50%)；

色相： 色相的0度为R（红）色，120度为G（绿）色，240度为B（蓝）色。

色彩饱和度： 正常值100%是饱和，若是要让色彩变得不那么鲜艳（即变得暗沉），就把色彩饱和度（Saturation）往0%的方向调整即可。

亮度： 正常值50%，往上越亮，往下越暗。

HEX 
+++++++

在HTML&CSS中16进位码的色彩标示是由一个井号（＃）开始，接着后面带6个数字来表示。

代表含义： #123456--1和2位代表的是R分量，3和4位代表的是G分量，5和6位代表的是B分量。


